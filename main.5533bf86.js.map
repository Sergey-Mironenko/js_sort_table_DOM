{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","headers","querySelectorAll","rows","headerText","count","toNumber","text","Number","split","join","i","length","textContent","addEventListener","action","targetElement","target","columntIndex","replace","prev","current","compareCondition","prevContent","innerHTML","currentContent","matches","sort","currentRow","prevRow","prevText","children","currentText","match","localeCompare"],"mappings":";AAAA,aAgBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAdA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAUH,EAAUI,iBAAiB,MACrCC,EAAOJ,SAASC,cAAc,SAASE,iBAAiB,MACxDE,EAAa,GACfC,EAAQ,EAEZ,SAASC,EAASC,GACTC,OAAAA,OAAOD,EAAKE,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,KAGzD,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAIV,GAASW,OAAQD,IACvCP,EAAWH,EAAQU,GAAGE,aAAeF,EAGvCb,EAAUgB,iBAAiB,QAAS,SAAAC,GAC5BC,IAAAA,EAAgBD,EAAOE,OACvBC,EAAed,EAAWY,EAAcH,aAErCM,SAAAA,EAAQC,EAAMC,EAASC,GAC1BA,GAAAA,EAAkB,CACpBjB,IAEMkB,IAAAA,EAAcH,EAAKI,UACnBC,EAAiBJ,EAAQG,UAE/BJ,EAAKI,UAAYC,EACjBJ,EAAQG,UAAYD,GAIpB,GAACP,EAAcU,QAAQ,MAIxB,GACDrB,EAAQ,EAEJF,EAAAA,GAAMwB,KAAK,SAACC,EAAYC,GACpBC,IAAAA,EAAWD,EAAQE,SAASb,GAAcL,YAC1CmB,EAAcJ,EAAWG,SAASb,GAAcL,YAElDiB,EAAS,GAAGG,MAAM,UACpBd,EAAQU,EAASD,EAAoD,IAAxCE,EAASI,cAAcF,IAKpDb,EAAQU,EAASD,EAHEtB,EAASwB,GACNxB,EAAS0B,YAK5B3B,EAAQ","file":"main.5533bf86.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst headers = tableHead.querySelectorAll('th');\nconst rows = document.querySelector('tbody').querySelectorAll('tr');\nconst headerText = {};\nlet count = 0;\n\nfunction toNumber(text) {\n  return Number(text.split(',').join('').split('$').join(''));\n}\n\nfor (let i = 0; i < [...headers].length; i++) {\n  headerText[headers[i].textContent] = i;\n}\n\ntableHead.addEventListener('click', action => {\n  const targetElement = action.target;\n  const columntIndex = headerText[targetElement.textContent];\n\n  function replace(prev, current, compareCondition) {\n    if (compareCondition) {\n      count++;\n\n      const prevContent = prev.innerHTML;\n      const currentContent = current.innerHTML;\n\n      prev.innerHTML = currentContent;\n      current.innerHTML = prevContent;\n    }\n  }\n\n  if (!targetElement.matches('th')) {\n    return;\n  }\n\n  do {\n    count = 0;\n\n    [...rows].sort((currentRow, prevRow) => {\n      const prevText = prevRow.children[columntIndex].textContent;\n      const currentText = currentRow.children[columntIndex].textContent;\n\n      if (prevText[0].match(/[A-Z]/i)) {\n        replace(prevRow, currentRow, prevText.localeCompare(currentText) === 1);\n      } else {\n        const prevNumber = toNumber(prevText);\n        const currentNumber = toNumber(currentText);\n\n        replace(prevRow, currentRow, prevNumber > currentNumber);\n      }\n    });\n  } while (count > 0);\n});\n"]}